---
import {sentenceCase} from 'sentence-case'
import RootLayout from './RootLayout.astro'

const parentPathRegex = /^.*\/components\/[^\/]*/

const [parentPath] = Astro.url.pathname.match(parentPathRegex)

// TODO: Handle case where parentPath is falsy

const pages = await Astro.glob('../pages/**/*')

const indexPage = pages.find(page => page.url === parentPath)

const siblingPages = pages.filter(page => page.url.startsWith(parentPath) && page.url !== parentPath)

const {title, description} = indexPage?.frontmatter || {}

const navItems = [indexPage, ...siblingPages].map(page => {
  const [filename] = page.file.split('/').pop().split('.')
  return {
    title: filename === 'index' ? 'Overview' : sentenceCase(filename),
    url: page.url
  }
})
---

<RootLayout {...indexPage}>
  <h1>{title}</h1>
  {description ? <p>{description}</p> : null}
  {
    navItems.length > 1 ? (
      <nav>
        <ul>
          {navItems.map(item => (
            <li>
              <a href={item.url} aria-current={item.url === Astro.url.pathname}>
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    ) : null
  }
  <slot />
</RootLayout>
