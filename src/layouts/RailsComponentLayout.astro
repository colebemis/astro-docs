---
import type {MDXLayoutProps} from 'astro'
import {Debug} from 'astro/components'
import ComponentLayout from './ComponentLayout.astro'

type Props = MDXLayoutProps<{
  id: string
}>

type Component = {
  // TODO: Rename to `id`?
  component: string
  status: string
  source: string
  lookbook: string
  // TODO: Rename to `arguments`?
  parameters: Array<{
    name: string
    type: string
    default: string // TODO: Rename `default` to `defaultValue`
    description: string
  }>
}

const response = await fetch(
  'https://api.github.com/repos/primer/view_components/contents/static/arguments.json?ref=v0.0.110',
  {
    headers: {
      Accept: 'application/vnd.github+json',
      Authorization: `token ${import.meta.env.GITHUB_TOKEN}`
    }
  }
)

const data = await response.json()

// TODO: Validate data schema
const components: Component[] = JSON.parse(atob(data.content.replace(/\s+/g, '')))

const component = components.find(component => component.component === Astro.props.frontmatter.id)

const additionalHeadings = [
  {text: 'Examples', depth: 2, slug: 'examples'},
  {text: 'Arguments', depth: 2, slug: 'arguments'}
]
---

<ComponentLayout headings={Astro.props.headings.concat(additionalHeadings)}>
  <slot />
  <h2 id="examples">Examples</h2>
  <h2 id="arguments">Arguments</h2>
  {
    component ? (
      <table>
        <thead>
          <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Default</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          {component.parameters.map(param => (
            <tr>
              <td>{param.name}</td>
              <td>{param.type}</td>
              <td>{param.default}</td>
              {/* TODO: Support Markdown in descriptions */}
              <td>{param.description}</td>
            </tr>
          ))}
        </tbody>
      </table>
    ) : null
  }
  {/* TODO: Document subcomponents (e.g. ActionList::Item) */}
  {/* TODO: Document slots */}
</ComponentLayout>
